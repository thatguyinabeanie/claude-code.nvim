{
  "permissions": {
    "allow": [
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(claude mcp)",
      "Bash(claude mcp:*)",
      "Bash(npm install:*)",
      "Bash(npm run build:*)",
      "Bash(./test_mcp.sh)",
      "Bash(claude --mcp-debug \"test\")",
      "Bash(./bin/claude-code-mcp-server:*)",
      "Bash(claude --mcp-debug \"test connection\")",
      "Bash(lua tests:*)",
      "Bash(nvim:*)",
      "Bash(claude --version)",
      "Bash(timeout:*)",
      "Bash(./scripts/test_mcp.sh:*)",
      "Bash(make test:*)",
      "Bash(lua:*)",
      "Bash(gh pr view:*)",
      "Bash(gh api:*)",
      "Bash(git push:*)",
      "Bash(git commit -m \"$(cat <<'EOF'\nfeat: implement safe window toggle to prevent process interruption\n\n- Add safe window toggle functionality to hide/show Claude Code without stopping execution\n- Implement process state tracking for running, finished, and hidden states  \n- Add comprehensive TDD tests covering hide/show behavior and edge cases\n- Create new commands: :ClaudeCodeSafeToggle, :ClaudeCodeHide, :ClaudeCodeShow\n- Add status monitoring with :ClaudeCodeStatus and :ClaudeCodeInstances\n- Support multi-instance environments with independent state tracking\n- Include user notifications for process state changes\n- Add comprehensive documentation in doc/safe-window-toggle.md\n- Update README with new window management features\n- Mark enhanced terminal integration as completed in roadmap\n\nThis addresses the UX issue where toggling Claude Code window would \naccidentally terminate long-running processes.\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(/Users/beanie/source/claude-code.nvim/fix_mcp_tests.sh)",
      "Bash(gh pr list:*)",
      "Bash(./scripts/test.sh:*)",
      "Bash(gh pr comment:*)",
      "Bash(stylua:*)",
      "Bash(markdownlint:*)",
      "Bash(./scripts/markdown/fix_markdown_comprehensive.sh:*)",
      "Bash(./scripts/lint_all.sh:*)",
      "Bash(make:*)",
      "Bash(git reset:*)",
      "Bash(shellcheck:*)",
      "Bash(git commit:*)",
      "Bash(vale:*)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:vale.sh)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true
}